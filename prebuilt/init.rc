on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_adj -16

    start ueventd

# create mountpoints
    mkdir /mnt 0775 root system

on init

sysclktz 0

loglevel 3

# setup the global environment
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_BOOTLOGO 1
    export ANDROID_CACHE /cache
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /storage/sdcard1
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/filterfw.jar

# Backward compatibility
    symlink /system/etc /etc
    symlink /sys/kernel/debug /d

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
    symlink /system/vendor /vendor

# create mountpoints
    mkdir /mnt 0775 root system
    mkdir /storage/sdcard1 0000 system system

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

# Backwards Compat - XXX: Going away in G*
    symlink /storage/sdcard1 /mnt/sdcard
    symlink /storage/sdcard1 /sdcard

    mkdir /system
    mkdir /data 0771 system system
    mkdir /persist 0771 system system
    mkdir /cache 0771 system cache
    mkdir /config 0500 root root
    mkdir /cust   
    mkdir /persist 0771 system system
    mkdir /HWUserData 0775 system system

# Directory for putting things only root should see.
    mkdir /mnt/secure 0700 root root

# Directory for staging bindmounts
    mkdir /mnt/secure/staging 0700 root root

# Directory-target for where the secure container
# imagefile directory will be bind-mounted
    mkdir /mnt/secure/asec  0700 root root

# Secure container public mount points.
    mkdir /mnt/asec  0700 root system
    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000

# Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0
    write /proc/sys/kernel/randomize_va_space 2

# Create cgroup mount points for process groups
    mkdir /dev/cpuctl
    mount cgroup none /dev/cpuctl cpu
    chown system system /dev/cpuctl
    chown system system /dev/cpuctl/tasks
    chmod 0777 /dev/cpuctl/tasks
    write /dev/cpuctl/cpu.shares 1024

    mkdir /dev/cpuctl/fg_boost
    chown system system /dev/cpuctl/fg_boost/tasks
    chmod 0777 /dev/cpuctl/fg_boost/tasks
    write /dev/cpuctl/fg_boost/cpu.shares 1024

    mkdir /dev/cpuctl/bg_non_interactive
    chown system system /dev/cpuctl/bg_non_interactive/tasks
    chmod 0777 /dev/cpuctl/bg_non_interactive/tasks
# 5.0 %
    write /dev/cpuctl/bg_non_interactive/cpu.shares 52

# Allow everybody to read the xt_qtaguid resource tracking misc dev.
# This is needed by any process that uses socket tagging.
    chmod 0644 /dev/xt_qtaguid

on emmc-fs
# mount mmc partitions
    wait /dev/block/mmcblk0p12
    mount ext4 /dev/block/mmcblk0p12 /system ro barrier=1,nodelalloc
    wait /dev/block/mmcblk0p13
    exec /system/bin/e2fsck -p /dev/block/mmcblk0p13
    mount ext4 /dev/block/mmcblk0p13 /data nosuid nodev barrier=1 noauto_da_alloc,nodelalloc
    mount ext4 /dev/block/mmcblk0p6 /cache nosuid nodev barrier=1,nodelalloc
    write /sys/module/block2mtd/parameters/block2mtd /dev/block/mmcblk0p17
    wait /dev/block/mmcblk0p19
    mount vfat /dev/block/mmcblk0p19 /HWUserData uid=1000,gid=1015,umask=0002,utf8
    mount ext4 /dev/block/mmcblk0p18 /cust ro

on post-fs
# once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount

# We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

# Mounting of persist is moved to 'on emmc-fs' and 'on fs' sections
# We chown/chmod /persist again so because mount is run as root + defaults
    chown system system /persist
    chmod 0771 /persist
    chmod 0664 /sys/devices/platform/msm_sdcc.1/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.2/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.3/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.4/polling

# Chown polling nodes as needed from UI running on system server
    chown system system /sys/devices/platform/msm_sdcc.1/polling
    chown system system /sys/devices/platform/msm_sdcc.2/polling
    chown system system /sys/devices/platform/msm_sdcc.3/polling
    chown system system /sys/devices/platform/msm_sdcc.4/polling

# Create dump dir and collect dumps.
# Do this before we mount cache so eventually we can use cache for
# storing dumps on platforms which do not have a dedicated dump partition.
   
    mkdir /data/dontpanic
    chown root log /data/dontpanic
    chmod 0750 /data/dontpanic

    chmod 0664 /dev/light
    chmod 0664 /dev/proximity


# Collect apanic data, free resources and re-arm trigger
    copy /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    copy /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

    write /proc/apanic_console 1

# Same reason as /data above
    mkdir /cache/huawei_ota 0775 system system
    chmod 0775 /cache/huawei_ota
    mkdir /cache/huawei_ota/tmp 0775 system system
    chmod 0775 /cache/huawei_ota/tmp

    chown system cache /cache
    chmod 0771 /cache

# This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

#change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

#change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

    # create the lost+found directories, so as to enforce our permissions
    mkdir /cache/lost+found 0770 root root

on post-fs-data
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

    # Create dump dir and collect dumps.
    # Do this before we mount cache so eventually we can use cache for
    # storing dumps on platforms which do not have a dedicated dump partition.
    mkdir /data/dontpanic 0750 root log

    # Collect apanic data, free resources and re-arm trigger
    copy /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    copy /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

    write /proc/apanic_console 1

    # create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/systemkeys 0700 system system
    mkdir /data/misc/vpn/profiles 0770 system system

# give system access to wpa_supplicant.conf for backup and restore
    mkdir /data/misc/wifi
    chmod 0770 /data/misc/wifi
    chown wifi wifi /data/misc/wifi/

    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/local 0751 root root
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root
    mkdir /data/radio 0770 radio radio

#create  WIFI filesystem structure

    mkdir /data/misc/wifi/sockets 0775
    chown wifi wifi /data/misc/wifi/sockets
    mkdir /data/misc/wpa_supplicant 0775
    chown wifi wifi /data/misc/wpa_supplicant
    
    mkdir /data/misc/dhcp 0775 system system

    mkdir /data/misc/wifi/load
    chmod 0775 /data/misc/wifi/load
    chown system system /data/misc/wifi/load/

    mkdir /data/misc/wifi/bin 0775 system system

    mkdir /data/misc/sensors 0775 root root
    write /data/system/sensors/settings 0
    chmod 0664 /data/system/sensors/settings

# create dalvik-cache and double-check the perms
    mkdir /data/dalvik-cache 0771 system system
    chown system system /data/dalvik-cache
    chmod 0771 /data/dalvik-cache

    mkdir /cache/dalvik-cache 0771 system system
    chown system system /cache/dalvik-cache
    chmod 0771 /cache/dalvik-cache

    # create resource-cache and double-check the perms
    mkdir /data/resource-cache 0771 system system
    chown system system /data/resource-cache
    chmod 0771 /data/resource-cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770 root root

# double check the perms, in case lost+found already exists, and set owner
    chown root root /data/lost+found
    chmod 0770 /data/lost+found
    chown root root /cache/lost+found
    chmod 0770 /cache/lost+found
    
        # If there is no fs-post-data action in the init.<device>.rc file, you
    # must uncomment this line, otherwise encrypted filesystems
    # won't work.
    # Set indication (checked by vold) that we have finished this action
    #setprop vold.post_fs_data_done 1

    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file
    chown system system /sys/class/android_usb/android0/f_rndis/ethaddr
    chmod 0660 /sys/class/android_usb/android0/f_rndis/ethaddr
    
    mkdir /data/drm 0775 drm drm
    chown system sdcard_rw /data/drm
    chmod 0775 /data/drm

    mkdir /data/drm/rights 0775 system sdcard_rw 
    chown system sdcard_rw /data/drm/rights
    chmod 0775 /data/drm/rights
    mkdir /data/huawei_hwvefs 0775 root sdcard_rw
    chown root sdcard_rw /data/huawei_hwvefs
    chmod 0775 /data/huawei_hwvefs

    mkdir /data/cust
    
    symlinkfile apk_name_need_to_enable.xml /data/cust/apk_name_need_to_enable.xml
    
    symlink nv /data/cust/nv
    symlink wifi /data/cust/wifi
    symlink xml /data/cust/xml
    symlink prop /data/cust/prop
    symlink wallpaper /data/cust/wallpaper
    symlink ons /data/cust/ons
    symlink app /data/cust/app
    symlink media /data/cust/media
    symlink logo /data/cust/logo
    symlink guide /data/cust/guide
    symlink email /data/cust/email
      
    exec /system/bin/load_oemlogo

# create the OMA directories, so as to enforce our permissions
    mkdir /data/oma 0777
    chmod 0777 /data/oma
    chmod 0660 /dev/assd
    chown smartcard smartcard /dev/assd

import /system/etc/init.local.rc

on boot
# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40
    setrlimit 7 2048 2048

# move the configration to init.highmem.rc for 512M sdram or ini.mem.rc rof 256MB sdram

# paramters to match how it is managing things.
    write /proc/sys/vm/overcommit_memory 1
    write /proc/sys/vm/min_free_order_shift 4
    chown root system /sys/module/lowmemorykiller/parameters/adj
    chmod 0664 /sys/module/lowmemorykiller/parameters/adj
    chown root system /sys/module/lowmemorykiller/parameters/minfree
    chmod 0664 /sys/module/lowmemorykiller/parameters/minfree

# Tweak background writeout
    write /proc/sys/vm/dirty_expire_centisecs 200
    write /proc/sys/vm/dirty_background_ratio  5

# Permissions for System Server and daemons.
    chown radio system /sys/android_power/state
    chown radio system /sys/android_power/request_state
    chown radio system /sys/android_power/acquire_full_wake_lock
    chown radio system /sys/android_power/acquire_partial_wake_lock
    chown radio system /sys/android_power/release_wake_lock
    chown radio system /sys/power/state
    chown radio system /sys/power/wake_lock
    chown radio system /sys/power/wake_unlock
    chmod 0660 /sys/power/state
    chmod 0660 /sys/power/wake_lock
    chmod 0660 /sys/power/wake_unlock
    chown system system /sys/class/timed_output/vibrator/enable
    chown system system /sys/class/leds/keyboard-backlight/brightness
    chown system system /sys/class/leds/lcd-backlight/brightness
    chown system system /sys/class/leds/button-backlight/brightness
    chown system system /sys/class/leds/jogball-backlight/brightness
    chown system system /sys/class/leds/red/brightness
    chown system system /sys/class/leds/green/brightness
    chown system system /sys/class/leds/blue/brightness
    chown system system /sys/class/leds/red/device/grpfreq
    chown system system /sys/class/leds/red/device/grppwm
    chown system system /sys/class/leds/red/device/blink
    chown system system /sys/class/leds/red/brightness
    chown system system /sys/class/leds/green/brightness
    chown system system /sys/class/leds/blue/brightness
    chown system system /sys/class/leds/red/device/grpfreq
    chown system system /sys/class/leds/red/device/grppwm
    chown system system /sys/class/leds/red/device/blink
    chown system system /sys/class/timed_output/vibrator/enable
    chown system system /sys/module/sco/parameters/disable_esco
    chown system system /sys/kernel/ipv4/tcp_wmem_min
    chown system system /sys/kernel/ipv4/tcp_wmem_def
    chown system system /sys/kernel/ipv4/tcp_wmem_max
    chown system system /sys/kernel/ipv4/tcp_rmem_min
    chown system system /sys/kernel/ipv4/tcp_rmem_def
    chown system system /sys/kernel/ipv4/tcp_rmem_max
    chown root radio /proc/cmdline

    chown system system /sys/devices/platform/mmi_key_dev/keytest

# we changed the owner and group of these files of usb 
# to meet the requirements of projectmenu
    chown system system /sys/devices/platform/msm_hsusb/gadget/sdstatus
    chown system system /sys/devices/platform/msm_hsusb/gadget/switchusb
    chown system system /sys/devices/platform/msm_hsusb/gadget/fixusb

    # allow system to modify cpufreq control files
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq


# Define TCP buffer sizes for various networks
#   ReadMin, ReadInitial, ReadMax, WriteMin, WriteInitial, WriteMax,
    setprop net.tcp.buffersize.default 4096,87380,110208,4096,16384,110208
    setprop net.tcp.buffersize.wifi    4095,87380,110208,4096,16384,110208
    setprop net.tcp.buffersize.umts    4094,87380,110208,4096,16384,110208
    setprop net.tcp.buffersize.edge    4093,26280,35040,4096,16384,35040
    setprop net.tcp.buffersize.gprs    4092,8760,11680,4096,8760,11680
    setprop net.tcp.buffersize.lte     4094,87380,1220608,4096,16384,1220608
    setprop net.tcp.buffersize.evdo_b  4094,87380,262144,4096,16384,262144

# Assign TCP buffer thresholds to be ceiling value of technology maximums
# Increased technology maximums should be reflected here.
    write /proc/sys/net/core/rmem_max  1220608
    write /proc/sys/net/core/wmem_max  1220608

    class_start default

# allow system to modify ksm control files
    chown root system /sys/kernel/mm/ksm/pages_to_scan
    chmod 0664 /sys/kernel/mm/ksm/pages_to_scan
    chown root system /sys/kernel/mm/ksm/sleep_millisecs
    chmod 0664 /sys/kernel/mm/ksm/sleep_millisecs
    chown root system /sys/kernel/mm/ksm/run
    chmod 0664 /sys/kernel/mm/ksm/run
    write /sys/kernel/mm/ksm/sleep_millisecs 1500
    write /sys/kernel/mm/ksm/pages_to_scan 256

# Set this property so surfaceflinger is not started by system_init
    setprop system_init.startsurfaceflinger 0

# Run sysinit
    exec /system/bin/sysinit

    class_start core
    class_start main

on nonencrypted
    class_start late_start

on charger
    class_start charger

on property:vold.decrypt=trigger_reset_main
    class_reset main

on property:vold.decrypt=trigger_load_persist_props
    load_persist_props

on property:vold.decrypt=trigger_post_fs_data
    trigger post-fs-data

on property:vold.decrypt=trigger_restart_min_framework
    class_start main

on property:vold.decrypt=trigger_restart_framework
    class_start main
    class_start late_start

on property:vold.decrypt=trigger_shutdown_framework
    class_reset late_start
    class_reset main

# Used to disable USB when switching states
on property:sys.usb.config=none
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state $sys.usb.config

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct D002
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration
on property:sys.usb.config=accessory
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d00
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration, with adb
on property:sys.usb.config=accessory,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d01
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config $persist.sys.usb.config

## Daemon processes to be run by init.
##

#/* we change the following lines to change the accel and  compass_aot mode to pass the AT&T test
chmod 0664 /dev/accel
chmod 0664 /dev/compass_aot
chmod 0664 /dev/akm8975_dev
chmod 0664 /dev/compass_dev
chmod 0664 /dev/gyro

service ueventd /sbin/ueventd
    class core
    critical

service console /system/bin/sh
    class core
    console
    disabled
    user shell
    group log

on property:ro.debuggable=1
    start console

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core
    disabled

# adbd on at boot in emulator
on property:ro.kernel.qemu=1
    start adbd

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

service servicemanager /system/bin/servicemanager
    class core
    user system
    group system
    critical
    onrestart restart zygote
    onrestart restart media
    onrestart restart surfaceflinger
    onrestart restart drm

service vold /system/bin/vold
    class core
    socket vold stream 0660 root mount
    ioprio be 2

service netd /system/bin/netd
    class main
    socket netd stream 0660 root system
    socket dnsproxyd stream 0660 root inet

service debuggerd /system/bin/debuggerd
    class main

service ril-daemon /system/bin/rild
    class main
    socket rild stream 660 root radio
    socket rild-debug stream 660 radio system
    user root
    group radio cache inet misc audio sdcard_rw qcom_oncrpc diag

service surfaceflinger /system/bin/surfaceflinger
    class main
    user system
    group graphics
    onrestart restart zygote

service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
    class main
    socket zygote stream 660 root system
    onrestart write /sys/android_power/request_state wake
    onrestart write /sys/power/state on
    onrestart restart media
    onrestart restart netd

service drm /system/bin/drmserver
    class main
    user drm
    group system inet drmrpc

service media /system/bin/mediaserver
    class main
    user media
    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc
    ioprio rt 4

service bootanim /system/bin/bootanimation
    class main
    user graphics
    group graphics
    disabled
    oneshot

service dbus /system/bin/dbus-daemon --system --nofork
    class main
    socket dbus stream 660 bluetooth bluetooth
    user bluetooth
    group bluetooth net_bt_admin

service bluetoothd /system/bin/bluetoothd -n
    class main
    socket bluetooth stream 660 bluetooth bluetooth
    socket dbus_bluetooth stream 660 bluetooth bluetooth
# init.rc does not yet support applying capabilities, so run as root and
# let bluetoothd drop uid to bluetooth with the right linux capabilities
    group bluetooth net_bt_admin misc
    disabled

service hfag /system/bin/sdptool add --channel=10 HFAG
    class main
    user bluetooth
    group bluetooth net_bt_admin
    disabled
    oneshot

service hsag /system/bin/sdptool add --channel=11 HSAG
    class main
    user bluetooth
    group bluetooth net_bt_admin
    disabled
    oneshot

service opush /system/bin/sdptool add --psm=5255 --channel=12 OPUSH
    class main
    user bluetooth
    group bluetooth net_bt_admin
    disabled
    oneshot
    
service wlan_detect /system/bin/wlan_detect
    class main
    user root
    group root
    oneshot

service wpa_supplicant /system/bin/wpa_supplicant -Dwext -ieth0 -W -c/data/misc/wifi/wpa_supplicant.conf 
    class main
    disabled
    oneshot

service ath_supplicant /system/bin/ath_supplicant -Dar6003 -ieth0 -W -c/data/misc/wifi/wpa_supplicant.conf
    class main
    disabled
    oneshot

service dhcpcd_eth0 /system/bin/dhcpcd -BKL 
    class main
    disabled 
    oneshot
    
service iprenew_eth0 /system/bin/dhcpcd -n 
    class main
    disabled 
    oneshot

service pbap /system/bin/sdptool add --channel=19 PBAP
    class main
    user bluetooth
    group bluetooth net_bt_admin
    disabled
    oneshot

service installd /system/bin/installd
    class main
    socket installd stream 600 system system

service racoon /system/bin/racoon
    class main
    socket racoon stream 600 system system
    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
    group vpn net_admin inet
    disabled
    oneshot

service mtpd /system/bin/mtpd
    class main
    socket mtpd stream 600 system system
    user vpn
    group vpn net_admin inet net_raw
    disabled
    oneshot

service keystore /system/bin/keystore /data/misc/keystore
    class main
    user keystore
    group keystore
    socket keystore stream 666

service tcpmsgd /system/bin/tcpmsgd
    class main
    disabled

on property:service.health.manager=1
    class main
    start tcpmsgd

on property:service.health.manager=0
    class main
    stop tcpmsgd

service test_diag /system/bin/test_diag
    class main
    oneshot

# start huawei rpc server
service oem_rpc_svc /system/bin/oem_rpc_svc
    class main
    oneshot

service dumpstate /system/bin/dumpstate -s
    class main
    socket dumpstate stream 0660 shell log
    disabled
    oneshot

service rmt_oeminfo /system/bin/rmt_oeminfo
    class main
    user root
    disabled

on property:ro.emmc=1
    start rmt_oeminfo

service compassd /system/bin/compassd
    class main
    disabled
    oneshot
service akm8975 /system/bin/akmd8975
    class main
    disabled
    oneshot

service akm8962 /system/bin/akmd8962
    class main
    disabled
    oneshot

service bcm_hciattach /system/bin/sh /system/etc/bluetooth/init.bcm.bt.sh
    class main
    user bluetooth
    group qcom_oncrpc bluetooth net_bt_admin system
    disabled 
    
service chip_power_on /system/bin/sh /system/etc/bluetooth/init.bcm.chip_on.sh
    class main
    user root
    group system
    disabled
    oneshot 
    
service chip_power_off /system/bin/sh /system/etc/bluetooth/init.bcm.chip_off.sh
    class main
    user root
    group system
    disabled
    oneshot
    
service hci_dev_up /system/bin/hci_dev_state --dev_up
    class main
    user root
    group bluetooth system
    disabled 
    oneshot
    
service hci_dev_down /system/bin/hci_dev_state --dev_down
    class main
    user root
    group bluetooth system
    disabled 
    oneshot    
service BtWiRfServer /system/xbin/RfTest
    class main
    user root
    group bluetooth net_bt_admin system  
    disabled
    oneshot

service btld /system/bin/btld
    class main
    user bluetooth system
    group bluetooth net_bt_admin system
    disabled 


service filebackup /system/bin/filebackup
    socket filebackup stream 0600 radio system


service callife /system/bin/callife
    class main
    oneshot

service systemstattool /system/bin/systemstattool
    class main
    socket socket_front_act_info stream 0660 root mount
    socket socket_act_start_perf stream 0660 root mount
    disabled

on property:ro.service.systemstattool=true
    start systemstattool

chmod 0755  /etc/ppp/ip-up-ppp
chmod 0755  /system/xbin/cplusw
service  cplusw  /system/xbin/cplusw
    class main
    
#/* the following services are added
# * according to the Vodafone's requirement, other products are not needed. 
# */
service RescueStarter /system/bin/RescueStarter
    class main
    user graphics
    group input graphics
    disabled

on property:ro.RescueStarter=1
    start RescueStarter

# adb over network
on property:service.adb.tcp.port=5555
    stop adbd
    start adbd
on property:service.adb.tcp.port=-1
    stop adbd
    start adbd


